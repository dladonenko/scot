<?php


/**
 * Skeleton subclass for performing query and update operations on the 'content' table.
 *
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * 04/13/11 17:59:53
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    lib.model
 */
class ContentPeer extends BaseContentPeer {

	private static function addContentAttachmentJoin(Criteria $c) {
		$c->addJoin(self::ID, ContentAttachmentPeer::CONTENT_ID, Criteria::LEFT_JOIN);
    	$c->setDistinct();
	}


    public static function getPaid(Criteria $c=null, PropelPDO $con = null, $withAttachments=false) {
		if($c===null) $c=new Criteria();
      	$c->add(self::IS_FREE, false);
      	if($withAttachments) self::addContentAttachmentJoin($c);
    	return self::doSelect($c);
    }

    public static function getPaidCount(Criteria $c=null, PropelPDO $con = null) {
		if($c===null) $c=new Criteria();
      	$c->add(self::IS_FREE, false);
      	return self::doCount($c);
    }

    public static function getFree(Criteria $c=null, PropelPDO $con = null, $withAttachments=false) {
		if($c===null) $c=new Criteria();
    	$c->add(self::IS_FREE, true);
    	if($withAttachments) self::addContentAttachmentJoin($c);
    	return self::doSelect($c);
    }

    public static function getFreeOfCulture() {
        $items=self::getFree();
        self::setCulture($items);
        return $items;
    }

    public static function getPaidOfCulture() {
        $items=self::getPaid();
        self::setCulture($items);
        return $items;
    }

    protected static function setCulture(&$items) {
    	 $culture=sfContext::getInstance()->getUser()->getAttribute('culture', sfConfig::get('app_culture_default'), 'backend');
    	 foreach($items as &$item) {
    	 	$item->setCulture($culture);
    	 }
    	 return $items;
    }

    public static function getFreeCount(Criteria $c=null, PropelPDO $con = null) {
		if($c===null) $c=new Criteria();
      	$c->add(self::IS_FREE, true);
      	return self::doCount($c);
    }

    public static function getFreeGeneralVersion() {
		$c=new Criteria();
    	$c->add(self::IS_FREE, true);
    	$c->clearSelectColumns();
    	$c->addSelectColumn('SUM('.self::VERSION.')');
        $stmt = self::doSelectStmt($c);
        $row = $stmt->fetch(PDO::FETCH_NUM);
        return $row[0];

    }
} // ContentPeer
